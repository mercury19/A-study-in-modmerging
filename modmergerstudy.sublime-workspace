{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"all",
				"all_prefix"
			],
			[
				"quote",
				"quote_ref〔variable〕"
			],
			[
				"find_",
				"find_old_ref〔function〕"
			],
			[
				"s",
				"string"
			],
			[
				"find",
				"find_char"
			],
			[
				"module",
				"module_troops"
			],
			[
				"path",
				"path_exists〔module〕"
			],
			[
				"try",
				"try_end"
			],
			[
				"val",
				"val_div"
			],
			[
				"else",
				"else_try"
			],
			[
				"pat",
				"path_exists〔module〕"
			],
			[
				"string",
				"string_corr〔function〕"
			],
			[
				"slot_troop_si",
				"slot_troop_signup_2〔variable〕"
			],
			[
				"line",
				"line_corr〔function〕"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Source/modmerger.py",
			"settings":
			{
				"buffer_size": 12954,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/modmerger_header.py",
			"settings":
			{
				"buffer_size": 5688,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "WRECK_VERSION = '1.0.0'\n\nimport sys\nif (sys.version_info[0] != 2) or (sys.version_info[1] < 6):\n\texit(\"\\nYou're running Python version {0}.{1}.{2}.\\nW.R.E.C.K. requires Python version 2.6.x or 2.7.x to run!\\n\".format(*sys.version_info[0:3]))\nsys.dont_write_bytecode = True\n\nfrom time import time as gettime\nfrom os import makedirs\n\nfrom traceback import extract_tb\n\n# Color support\nif 'bw' in sys.argv:\n\tCOLORAMA = ('', '', '', '', '', '', '', '')\nelse:\n\ttry:\n\t\timport colorama\n\t\tcolorama.init()\n\t\tCOLORAMA = ('\\x1b[0m', '\\x1b[31m', '\\x1b[32m', '\\x1b[33m', '\\x1b[34m', '\\x1b[35m', '\\x1b[36m', '\\x1b[37m')\n\texcept:\n\t\tCOLORAMA = ('', '', '', '', '', '', '', '')\n\nfrom compiler import *\n\n\n\nwrite_id_files = \"ID_%s.py\" # Where the compiler will write new iteration ID-files.\nshow_performance_data = False # Set to true to display compiler performance data by default.\nexport_filename = '%s.txt' # How to name export files (only used for some debugging purposes).\n\nWRECK.time_started = gettime()\n\n\nprint\nprint '{2}*** Warband Refined & Enhanced Compiler Kit (W.R.E.C.K.) version {version!s} ***{0}'.format(*COLORAMA, version = WRECK_VERSION)\nprint 'Please report errors, problems and suggestions at {5}http://lav.lomskih.net/wreck/{0}'.format(*COLORAMA)\nprint\n\ntry:\n\n#   +-----------------------------------------------------------------------------------------------\n#  /\n# +\n# |\n\n\tprint 'Loading module...',\n\n\ttry:\n\n\t\t# Info module and plugins\n\t\tWRECK.current_module = 'info'\n\t\tfrom module_info import *\n\t\tWRECK.destination = export_dir.rstrip('/')\n\t\tglobals().update(WRECK.syntax_extensions)\n\t\tglobals().update(WRECK.plugin_globals)\n\n\t\t# Optional modules\n\t\tWRECK.current_module = 'item_modifiers'\n\t\ttry:\n\t\t\tfrom module_item_modifiers import *\n\t\texcept ImportError:\n\t\t\t#from defaults.module_item_modifiers import *\n\t\t\titem_modifiers = DEFAULT_ITEM_MODIFIERS\n\t\t\tWRECK.generate_item_modifiers = False\n\t\tgenerate_imod_constants_for_backwards_compatibility(item_modifiers)\n\t\tWRECK.current_module = 'ui_strings'\n\t\ttry:\n\t\t\tfrom module_ui_strings import *\n\t\texcept ImportError:\n\t\t\tui_strings = []\n\t\t\tWRECK.generate_ui_strings = False\n\t\tWRECK.current_module = 'user_hints'\n\t\ttry:\n\t\t\tfrom module_user_hints import *\n\t\texcept ImportError:\n\t\t\tuser_hints = []\n\t\t\tWRECK.generate_user_hints = False\n\n\t\t# Required modules\n\t\tWRECK.current_module = 'skills'\n\t\tfrom module_skills import *\n\t\tgenerate_skill_constants_for_backwards_compatibility(skills)\n\t\tWRECK.current_module = 'animations'\n\t\tfrom module_animations import *\n\t\tWRECK.current_module = 'factions'\n\t\tfrom module_factions import *\n\t\tWRECK.current_module = 'game_menus'\n\t\tfrom module_game_menus import *\n\t\tWRECK.current_module = 'info_pages'\n\t\tfrom module_info_pages import *\n\t\tWRECK.current_module = 'meshes'\n\t\tfrom module_meshes import *\n\t\tWRECK.current_module = 'mission_templates'\n\t\tfrom module_mission_templates import *\n\t\tWRECK.current_module = 'tracks'\n\t\tfrom module_music import *\n\t\tWRECK.current_module = 'particle_systems'\n\t\tfrom module_particle_systems import *\n\t\tWRECK.current_module = 'postfx_params'\n\t\tfrom module_postfx import *\n\t\tWRECK.current_module = 'quests'\n\t\tfrom module_quests import *\n\t\tWRECK.current_module = 'scene_props'\n\t\tfrom module_scene_props import *\n\t\tWRECK.current_module = 'scenes'\n\t\tfrom module_scenes import *\n\t\tWRECK.current_module = 'scripts'\n\t\tfrom module_scripts import *\n\t\tWRECK.current_module = 'simple_triggers'\n\t\tfrom module_simple_triggers import *\n\t\tWRECK.current_module = 'sounds'\n\t\tfrom module_sounds import *\n\t\tWRECK.current_module = 'strings'\n\t\tfrom module_strings import *\n\t\tWRECK.current_module = 'tableaus'\n\t\tfrom module_tableau_materials import *\n\t\tWRECK.current_module = 'triggers'\n\t\tfrom module_triggers import *\n\t\tWRECK.current_module = 'items'\n\t\tfrom module_items import *\n\t\tWRECK.current_module = 'map_icons'\n\t\tfrom module_map_icons import *\n\t\tWRECK.current_module = 'skins'\n\t\tfrom module_skins import *\n\t\tWRECK.current_module = 'presentations'\n\t\tfrom module_presentations import *\n\t\tWRECK.current_module = 'troops'\n\t\tfrom module_troops import *\n\t\tWRECK.current_module = 'party_templates'\n\t\tfrom module_party_templates import *\n\t\tWRECK.current_module = 'parties'\n\t\tfrom module_parties import *\n\t\tWRECK.current_module = 'dialogs'\n\t\tfrom module_dialogs import *\n\t\tWRECK.current_module = None\n\n\texcept Exception, e:\n\t\tprint '{1}FAILED.\\nMODULE `{module!s}` ERROR:\\n{error!s}{0}'.format(*COLORAMA, module = WRECK.current_module, error = (e.formatted() if isinstance(e, MSException) else formatted_exception()))\n\t\tif isinstance(e, TypeError) and (('object is not callable' in e.message) or ('indices must be integers' in e.message)):\n\t\t\texc_type, exc_value, exc_traceback = sys.exc_info()\n\t\t\terror_info = extract_tb(exc_traceback)[-1]\n\t\t\tprint '{6}  Compiler hint: this error is typically caused by a missing comma.\\n  Please check that tuples are followed by commas in `{path!s}` above line {line}:\\n\\n    {5}{code!s}{0}'.format(*COLORAMA, path = path_split(error_info[0])[1], line = error_info[1], code = error_info[3])\n\t\tWRECK.time_loaded = gettime()\n\t\traise MSException()\n\tprint '{2}DONE.{0}'.format(*COLORAMA)\n\tWRECK.time_loaded = gettime()\n\n# |\n# +\n#  \\\n#   +===============================================================================================\n#  /\n# +\n# |\n\n\tprint 'Loading plugins...',\n\n\ttry:\n\t\t# Check plugin requirements\n\t\tprereq_errors = [] ## create empty list \"prereq_errors\"\n\t\tfor plugin, required_by in WRECK.requirements.iteritems():\n\t\t\tif plugin not in WRECK.plugins:\n\t\t\t\tprereq_errors.append('Plugin %s not imported but required by %s.' % (plugin, ', '.join(required_by)))\n\t\tif prereq_errors:\n\t\t\traise MSException('\\r\\n'.join(prereq_errors))\n\t\t# Process data injections\n\t\tglob = get_globals()\n\t\tfor plugin in WRECK.plugins:\n\t\t\tfor parser in parsers.iterkeys():\n\t\t\t\tif hasattr(glob[plugin], parser):\n\t\t\t\t\tglob[parser].extend(getattr(glob[plugin], parser))\n\t\t\tinjections = getattr(glob[plugin], 'injection', None)\n\t\t\tif injections:\n\t\t\t\tfor inj_name, inj_elements in injections.iteritems():\n\t\t\t\t\tWRECK.injections.setdefault(inj_name, []).extend(inj_elements)\n\t\t\t\t\t#WRECK.warnings.append('Injection: %d elements for `%s` in `%s`' % (len(inj_elements), inj_name, plugin))\n\texcept Exception, e:\n\t\tprint '{1}FAILED.\\nPLUGIN `{module!s}` ERROR:\\n{error!s}{0}'.format(*COLORAMA, module = plugin, error = (e.formatted() if isinstance(e, MSException) else formatted_exception()))\n\t\tWRECK.time_plugins = gettime()\n\t\traise MSException()\n\tprint '{2}DONE.{0}'.format(*COLORAMA)\n\tWRECK.time_plugins = gettime()\n\n# |\n# +\n#  \\\n#   +===============================================================================================\n#  /\n# +\n# |\n\n\tprint 'Checking module syntax...',\n\n\ttry:\n\t\tfor entity_name, entity_def in parsers.iteritems():\n\t\t\tWRECK.current_module = entity_name\n\t\t\tget_globals()[entity_name] = check_syntax(get_globals()[entity_name], [entity_def['parser']], entity_def.get('uid', 0))\n\t\tWRECK.current_module = None\n\texcept Exception, e:\n\t\tprint '{1}FAILED.\\nMODULE `{module!s}` ERROR:\\n{error!s}{0}'.format(*COLORAMA, module = entity_name, error = (e.formatted() if isinstance(e, MSException) else formatted_exception()))\n\t\tWRECK.time_syntax = gettime()\n\t\traise MSException()\n\tprint '{2}DONE.{0}'.format(*COLORAMA)\n\tWRECK.time_syntax = gettime()\n\n\tWRECK.anim[7] = animations\n\tWRECK.fac[7] = factions\n\tWRECK.ip[7] = info_pages\n\tWRECK.imod[7] = item_modifiers\n\tWRECK.itm[7] = items\n\tWRECK.icon[7] = map_icons\n\tWRECK.mnu[7] = game_menus\n\tWRECK.mesh[7] = meshes\n\tWRECK.mt[7] = mission_templates\n\tWRECK.track[7] = tracks\n\tWRECK.psys[7] = particle_systems\n\tWRECK.p[7] = parties\n\tWRECK.pt[7] = party_templates\n\tWRECK.pfx[7] = postfx_params\n\tWRECK.prsnt[7] = presentations\n\tWRECK.qst[7] = quests\n\tWRECK.spr[7] = scene_props\n\tWRECK.scn[7] = scenes\n\tWRECK.script[7] = scripts\n\tWRECK.skl[7] = skills\n\tWRECK.snd[7] = sounds\n\tWRECK.s[7] = strings\n\tWRECK.tableau[7] = tableaus\n\tWRECK.trp[7] = troops\n\n# |\n# +\n#  \\\n#   +===============================================================================================\n#  /\n# +\n# |\n\n\tprint 'Allocating identifiers...',\n\n\ttry:\n\t\tallocate_global_variables()\n\t\tallocate_quick_strings()\n\t\tcalculate_identifiers(animations, anim)\n\t\tcalculate_identifiers(factions, fac)\n\t\tcalculate_identifiers(info_pages, ip)\n\t\tcalculate_identifiers(item_modifiers, imod, imodbit)\n\t\tcalculate_identifiers(items, itm)\n\t\tcalculate_identifiers(map_icons, icon)\n\t\tcalculate_identifiers(game_menus, mnu)\n\t\tcalculate_identifiers(meshes, mesh)\n\t\tcalculate_identifiers(mission_templates, mt)\n\t\tcalculate_identifiers(tracks, track)\n\t\tcalculate_identifiers(particle_systems, psys)\n\t\tcalculate_identifiers(parties, p)\n\t\tcalculate_identifiers(party_templates, pt)\n\t\tcalculate_identifiers(postfx_params, pfx)\n\t\tcalculate_identifiers(presentations, prsnt)\n\t\tcalculate_identifiers(quests, qst)\n\t\tcalculate_identifiers(scene_props, spr)\n\t\tcalculate_identifiers(scenes, scn)\n\t\tcalculate_identifiers(scripts, script)\n\t\tcalculate_identifiers(skills, skl)\n\t\tcalculate_identifiers(sounds, snd)\n\t\tcalculate_identifiers(strings, s)\n\t\tcalculate_identifiers(tableaus, tableau)\n\t\tcalculate_identifiers(troops, trp)\n\t\tundefined = undefined_identifiers()\n\t\tif undefined: raise MSException('undeclared identifiers found in module source:\\n * %s' % ('\\n * '.join(['%s (referenced by \\'%s\\')' % (name, '\\', \\''.join(refs)) for name, refs in undefined])))\n\texcept Exception, e:\n\t\tprint '{1}FAILED.'.format(*COLORAMA)\n\t\tif isinstance(e, MSException):\n\t\t\tprint 'MODULE ERROR:\\n{error!s}{0}'.format(*COLORAMA, error = e.formatted())\n\t\telse:\n\t\t\tprint 'COMPILER INTERNAL ERROR:\\n{error!s}{0}'.format(*COLORAMA, error = formatted_exception())\n\t\tWRECK.time_identifiers = gettime()\n\t\traise MSException()\n\tprint '{2}DONE.{0}'.format(*COLORAMA)\n\tWRECK.time_identifiers = gettime()\n\n# |\n# +\n#  \\\n#   +===============================================================================================\n#  /\n# +\n# |\n\n\tprint 'Compiling module...',\n\n\ttry:\n\t\tstage = 0\n\t\t# Pre-processing (note that all entity-level injections are already done but script-level injections are not).\n\t\tglob = get_globals()\n\t\tpreprocess_entities_internal(glob)\n\t\tstage = 1\n\t\tfor plugin in WRECK.plugins:\n\t\t\tprocessor = getattr(glob[plugin], 'preprocess_entities', None)\n\t\t\tif processor:\n\t\t\t\ttry: processor(glob)\n\t\t\t\texcept Exception, e: raise MSException('Error in %r pre-processor script.' % plugin, formatted_exception())\n\t\t# Compiling...\n\t\tstage = 2\n\t\tfor entity_name, entity_def in parsers.iteritems():\n\t\t\tstage = 3\n\t\t\tentities = get_globals()[entity_name]\n\t\t\tstage = 4\n\t\t\tfor index in xrange(len(entities)):\n\t\t\t\tentities[index] = entity_def['processor'](entities[index], index)\n\t\t\tstage = 5\n\t\t\tsetattr(WRECK, entity_name, entity_def['aggregator'](entities))\n\t\t# Post-processing (plugins are NOT allowed to do anything here as we are dealing with already compiled code)\n\t\tstage = 6\n\t\tpostprocess_entities()\n\texcept Exception, e:\n\t\tprint '{1}FAILED.'.format(*COLORAMA)\n\t\tif isinstance(e, MSException):\n\t\t\tif stage == 0:\n\t\t\t\tprint 'COMPILER PREPROCESSOR ERROR:\\n{error!s}{0}'.format(*COLORAMA, error = e.formatted())\n\t\t\tif stage == 1:\n\t\t\t\tprint 'PLUGIN {module!s} PREPROCESSOR ERROR:\\n{error!s}{0}'.format(*COLORAMA, module = plugin, error = e.formatted())\n\t\t\telif stage == 3:\n\t\t\t\tprint 'MODULE {module!s} ENTITY #{index} COMPILATION ERROR:\\n{error!s}{0}'.format(*COLORAMA, module = entity_name, index = index, error = e.formatted())\n\t\t\telif stage == 4:\n\t\t\t\tprint 'MODULE {module!s} AGGREGATOR ERROR:\\n{error!s}{0}'.format(*COLORAMA, module = entity_name, error = e.formatted())\n\t\t\telif stage == 5:\n\t\t\t\tprint 'COMPILER POSTPROCESSOR ERROR:\\n{error!s}{0}'.format(*COLORAMA, error = e.formatted())\n\t\telse:\n\t\t\tprint 'COMPILER INTERNAL ERROR:\\n{error!s}{0}'.format(*COLORAMA, error = formatted_exception())\n\t\tWRECK.time_compile = gettime()\n\t\traise MSException()\n\tprint '{2}DONE.{0}'.format(*COLORAMA)\n\tWRECK.time_compile = gettime()\n\n# |\n# +\n#  \\\n#   +===============================================================================================\n#  /\n# +\n# |\n\n\tprint 'Exporting module...',\n\n\texport = {\n\t\t'animations': export_filename % 'actions',\n\t\t'dialogs': export_filename % 'conversation',\n\t\t'dialog_states': export_filename % 'dialog_states',\n\t\t'factions': export_filename % 'factions',\n\t\t'game_menus': export_filename % 'menus',\n\t\t'info_pages': export_filename % 'info_pages',\n\t\t'items': export_filename % 'item_kinds1',\n\t\t'map_icons': export_filename % 'map_icons',\n\t\t'meshes': export_filename % 'meshes',\n\t\t'mission_templates': export_filename % 'mission_templates',\n\t\t'tracks': export_filename % 'music',\n\t\t'particle_systems': export_filename % 'particle_systems',\n\t\t'parties': export_filename % 'parties',\n\t\t'party_templates': export_filename % 'party_templates',\n\t\t'postfx_params': export_filename % 'postfx',\n\t\t'presentations': export_filename % 'presentations',\n\t\t'quests': export_filename % 'quests',\n\t\t'scene_props': export_filename % 'scene_props',\n\t\t'scenes': export_filename % 'scenes',\n\t\t'scripts': export_filename % 'scripts',\n\t\t'simple_triggers': export_filename % 'simple_triggers',\n\t\t'skills': export_filename % 'skills',\n\t\t'skins': export_filename % 'skins',\n\t\t'sounds': export_filename % 'sounds',\n\t\t'strings': export_filename % 'strings',\n\t\t'tableaus': export_filename % 'tableau_materials',\n\t\t'triggers': export_filename % 'triggers',\n\t\t'troops': export_filename % 'troops',\n\t\t'variables': export_filename % 'variables',\n\t\t'quick_strings': export_filename % 'quick_strings',\n\t}\n\tif WRECK.generate_item_modifiers: export['item_modifiers'] = 'Data/item_modifiers.txt'\n\tif WRECK.generate_ui_strings: export['ui_strings'] = 'Languages/en/ui.csv'\n\tif WRECK.generate_user_hints: export['user_hints'] = 'Languages/en/hints.csv'\n\n\ttry:\n\t\tfor entity_name, filename in export.iteritems():\n\t\t\tcontents = getattr(WRECK, entity_name)\n\t\t\tif contents is None:\n\t\t\t\t#print 'Module %s has no changes, skipping export.' % entity_name\n\t\t\t\tcontinue\n\t\t\t#print 'Exporting module %s...' % entity_name\n\t\t\tfilename = path_split(filename.replace('\\\\', '/'))\n\t\t\tfolder = ('%s/%s' % (WRECK.destination, filename[0])) if filename[0] else WRECK.destination\n\t\t\tif filename[0] and not(path_exists(folder)): makedirs(folder)\n\t\t\twith open('%s/%s' % (folder, filename[1]), 'w+b') as f: f.write(contents)\n\texcept Exception, e:\n\t\tprint '{1}FAILED.\\nCOMPILER INTERNAL ERROR WHILE WRECKING {module!s}:\\n{error!s}{0}'.format(*COLORAMA, module = entity_name, error = formatted_exception())\n\t\tWRECK.time_export = gettime()\n\t\traise MSException()\n\n\tif write_id_files is not None:\n\t\texport = {\n\t\t\t'animations': (WRECK.anim, 'anim_'),\n\t\t\t'factions': (WRECK.fac, 'fac_'),\n\t\t\t'info_pages': (WRECK.ip, 'ip_'),\n\t\t\t'items': (WRECK.itm, 'itm_'),\n\t\t\t'map_icons': (WRECK.icon, 'icon_'),\n\t\t\t'menus': (WRECK.mnu, 'mnu_'),\n\t\t\t'meshes': (WRECK.mesh, 'mesh_'),\n\t\t\t'mission_templates': (WRECK.mt, 'mt_'),\n\t\t\t'music': (WRECK.track, 'track_'),\n\t\t\t'particle_systems': (WRECK.psys, 'psys_'),\n\t\t\t'parties': (WRECK.p, 'p_'),\n\t\t\t'party_templates': (WRECK.pt, 'pt_'),\n\t\t\t'postfx_params': (WRECK.pfx, 'pfx_'),\n\t\t\t'presentations': (WRECK.prsnt, 'prsnt_'),\n\t\t\t'quests': (WRECK.qst, 'qst_'),\n\t\t\t'scene_props': (WRECK.spr, 'spr_'),\n\t\t\t'scenes': (WRECK.scn, 'scn_'),\n\t\t\t'scripts': (WRECK.script, 'script_'),\n\t\t\t'skills': (WRECK.skl, 'skl_'),\n\t\t\t'sounds': (WRECK.snd, 'snd_'),\n\t\t\t'strings': (WRECK.s, 'str_'),\n\t\t\t'tableau_materials': (WRECK.tableau, 'tableau_'),\n\t\t\t'troops': (WRECK.trp, 'trp_'),\n\t\t}\n\t\ttry:\n\t\t\tfor entity_name, (entity, prefix) in export.iteritems():\n\t\t\t\tcontents = '\\n'.join(['%s%s = %d' % (prefix, ref, index) for ref, index in sorted(map(lambda i:(i[0],int(i[1]&0xFFFFFFFF)), entity[0].iteritems()), lambda x,y:cmp(x[1],y[1]))])\n\t\t\t\twith open(write_id_files % entity_name, 'w+b') as f:\n\t\t\t\t\tf.write(contents)\n\t\t\t\t\tf.write('\\n')\n\t\texcept Exception, e:\n\t\t\tprint '{1}FAILED.\\nCOMPILER INTERNAL ERROR WHILE WRECKING {module!s}:\\n{error!s}{0}'.format(*COLORAMA, module = write_id_files % entity_name, error = formatted_exception())\n\t\t\tWRECK.time_export = gettime()\n\t\t\traise MSException()\n\n\tprint '{2}DONE.{0}'.format(*COLORAMA)\n\tWRECK.time_export = gettime()\n\n# |\n# +\n#  \\\n#   +-----------------------------------------------------------------------------------------------\n\n\nexcept MSException:\n\tWRECK.successful = False\n\nprint\nif WRECK.successful:\n\tprint '{2}COMPILATION SUCCESSFUL.{0}\\n'.format(*COLORAMA)\nelse:\n\tprint '{1}COMPILATION FAILED.{0}\\n'.format(*COLORAMA)\n\nerror_reporting_level = 3\nif 'silent' in sys.argv: error_reporting_level = 0\nif ('error' in sys.argv) or ('errors' in sys.argv): error_reporting_level = 1\nif ('error' in sys.argv) or ('warnings' in sys.argv): error_reporting_level = 2\nif ('notice' in sys.argv) or ('notices' in sys.argv): error_reporting_level = 3\n\nif WRECK.errors and (error_reporting_level > 0):\n\tprint 'The following errors were generated during compilation:{1}\\n '.format(*COLORAMA),\n\tprint '\\n  '.join(WRECK.errors)\n\tprint '{0}'.format(*COLORAMA)\nif WRECK.warnings and (error_reporting_level > 1):\n\tprint 'The following warnings were generated during compilation:{3}\\n '.format(*COLORAMA),\n\tprint '\\n  '.join(WRECK.warnings)\n\tprint '{0}'.format(*COLORAMA)\nif WRECK.notices and (error_reporting_level > 2):\n\tprint 'The following notifications were generated during compilation:{6}\\n '.format(*COLORAMA),\n\tprint '\\n  '.join(WRECK.notices)\n\tprint '{0}'.format(*COLORAMA)\nif show_performance_data and WRECK.time_loaded:\n\tprint 'Displaying W.R.E.C.K. performance information.'\n\tprint 'Use {5}show_performance_data = False{0} directive in {5}module_info.py{0} file to disable.'.format(*COLORAMA)\n\tprint\n\tif WRECK.time_loaded:      print '    %.03f sec spent to load module data.' % (WRECK.time_loaded - WRECK.time_started)\n\tif WRECK.time_plugins:     print '    %.03f sec spent to load plugins.' % (WRECK.time_plugins - WRECK.time_loaded)\n\tif WRECK.time_syntax:      print '    %.03f sec spent to check module syntax.' % (WRECK.time_syntax - WRECK.time_plugins)\n\tif WRECK.time_identifiers: print '    %.03f sec spent to allocate identifiers.' % (WRECK.time_identifiers - WRECK.time_syntax)\n\tif WRECK.time_compile:     print '    %.03f sec spent to compile module.' % (WRECK.time_compile - WRECK.time_identifiers)\n\tif WRECK.time_export:      print '    %.03f sec spent to export module.' % (WRECK.time_export - WRECK.time_compile)\n\tprint\n\tprint '    >>> %.03f sec total time spent. <<<' % (gettime() - WRECK.time_started)\n\tprint\nif 'wait' in sys.argv: raw_input('Press Enter to finish>')\n",
			"file": "Source/compile.py",
			"file_size": 18895,
			"file_write_time": 130696763781425728,
			"settings":
			{
				"buffer_size": 18448,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/compiler.py",
			"settings":
			{
				"buffer_size": 91799,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/modmerger_installer.py",
			"settings":
			{
				"buffer_size": 14848,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/util_common.py",
			"settings":
			{
				"buffer_size": 3563,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/util_animations.py",
			"settings":
			{
				"buffer_size": 1131,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/util_presentations.py",
			"settings":
			{
				"buffer_size": 868,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/util_scripts.py",
			"settings":
			{
				"buffer_size": 9723,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Source/util_wrappers.py",
			"settings":
			{
				"buffer_size": 24558,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "run",
		"selected_items":
		[
			[
				"run",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"syntax py",
				"Set Syntax: Python"
			],
			[
				"run ",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"",
				"BracketHighlighter: Find Matching Offscreen Bracket"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 120.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/A study in modmerging/Source/module_game_menus.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/A study in modmerging/Source/module_factions.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/A study in modmerging/Source/modmerger_options.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/A study in modmerging/Source/modmerger_readme.txt",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/line_correction.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/README.md",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/headers/__init__.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_skins.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_scene_props.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_parties.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_mission_templates.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_map_icons.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_factions.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_animations.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_constants.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/headers/header_troops.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_troops.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/module_scenes.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/compiler.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/compile.py",
		"/C/Users/Noah/Desktop/Git/Python/Mount and Blade/Warband/Projects/Project Overhaul/Source/headers/header_skills.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_constants.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/compiler.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_common.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/compile.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_simple_triggers.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_dialogs.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_parties.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/__init__.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_troops.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_party_templates.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_parties.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_troops.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/colorama/ansitowin32.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_skills.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/wrecker test/Source/module_troops.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_info.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/wrecker.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/line_correction.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/wrecker test/Source/wrecker.bat",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/line_correction.bat",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/##Source Codes - DO NOT MODIFY/Floris 2.55 - 1.168/Source/Modmerger/modmerger_installer.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/The WRECKshop/Source/module_troops.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_presentations.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_skins.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_items.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_map_icons.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_scripts.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_mission_templates.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_game_menus.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/compile.bat",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_scene_props.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/STUFF/WRECK/integrated_ms/headers/header_troops.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_factions.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_game_menus.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_items.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_map_icons.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_mission_templates.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_quests.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/header_scenes.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/STUFF/WRECK/integrated_ms/module_info.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_meshes.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_music.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_particle_systems.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_postfx.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_quests.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_scenes.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_skills.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_sounds.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_tableau_materials.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_triggers.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_factions.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/module_animations.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/variables.txt",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/STUFF/WRECK/integrated_ms/headers/__init__.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/header_triggers.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/header_animations.py",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/Project Overhaul/Source/headers/file 1",
		"/C/Users/Noah/AppData/Roaming/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/C/Users/Noah/Desktop/Python Workspace/Mount and Blade/Projects/The WRECKshop/Source/line_correction.bat",
		"/C/Users/Noah/AppData/Roaming/Sublime Text 3/Packages/MB Warband API/Default (Windows).sublime-keymap",
		"/C/Users/Noah/AppData/Roaming/Sublime Text 3/Packages/MB Warband API/mb_warband_api.sublime-settings",
		"/C/Users/Noah/AppData/Roaming/Sublime Text 3/Packages/User/mb_warband_api.sublime-settings",
		"/C/Users/Noah/Desktop/Dplmc_1171/module_game_menus.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/REC/rec_constants.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/REC/rec_simple_triggers.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/REC/rec_scripts.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/REC/rec_party_templates.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/REC/rec_game_menus.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/module_troops.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_imports.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/module_game_menus.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_game_menus.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/LCO/lco_presentations.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_constants.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_party_templates.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_scripts.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_simple_triggers.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/rec_troops.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/plugin_lco.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/LCO/lco_scripts.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/LCO/lco_dtmst.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/lco_scripts.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/lco_dtms-t.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/lco_presentations.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/lco_game_menus.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/lco_strings.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/lco_constants.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/plugin_gpu.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/plugin_freelancer.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_triggers.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/module_mission_templates.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_imports.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_simple_triggers.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_scripts.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_presentations.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_mpq.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_dialogs.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_game_menus.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flncr_constants.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/parties_constants.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/TPE/tpe_imports.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/FLNCR/flancr_constants.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/module_strings.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/module_dialogs.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/plugin_tpe.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/compiler.py",
		"/C/Users/Noah/Desktop/DIplomacy Based Mod Thing/Source - WRECK/compile.py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"register_plugin",
			"setdefault",
			"injections",
			"get_globals",
			"__long__",
			"is_static",
			"isinstance",
			"op_num_value_bits",
			"plugin",
			"(\"",
			"from header_",
			"from  header_",
			"knows_riding_1",
			"from module_constants import *",
			"\"pt.",
			"\"trp.",
			"\"script.",
			"imod_",
			"spt.",
			"pt_",
			"trp_",
			"fac_",
			"pt_",
			"icon_",
			"trp_",
			"fac_",
			"constants",
			"re.",
			"repo",
			"header_troops",
			"def_attrib_multiplayer",
			"knows_common_multiplayer",
			"knows_riding_1",
			"write",
			"swadian_face_old_2",
			"wpe",
			"scn_",
			"itm_",
			"fac_",
			"create_mesh.",
			"\"mesh.",
			"mesh_",
			"mesh_load_window",
			"psys_",
			"snd_",
			"imodbit_",
			"fac_",
			" anim_",
			" fac_",
			"ZC01",
			"[itm_",
			" itm_",
			",itm",
			" itm_",
			" str.",
			" str_",
			"\"fac.",
			"fac_",
			"\"itm.",
			"itm",
			"itm_",
			"\\",
			"ZA05",
			"ZH05",
			"banner_selection\"",
			"banner",
			"military_campaigns",
			"characters",
			"garrison",
			"lco_",
			"\"flncr_",
			"tpe_",
			"flncr_",
			"tpe_",
			"freelancer_common_start",
			"inject",
			"pf_is_static",
			"common_battle_mission_start, #+Freelancer addition of native field battle trigger to sieges",
			"s1_reg0_s2",
			"whereabouts_unknown",
			"\"s12",
			"\"s15",
			"wife",
			"score",
			"rebellion_refuse_quarrelsome",
			"rebellion_refuse_pitiless",
			"comment_you_were_defeated_allied_unfriendly",
			"npc4_turn_against",
			"npc5",
			"npc2_kingsupport_2",
			"[\"tutorial_sword\", \"Sword\", [(\"long_sword\",0),(\"scab_longsw_a\", ixmesh_carry)], itp_type_one_handed_wpn|itp_primary, itc_longsword|itcf_carry_sword_left_hip|itcf_show_holster_when_drawn, 0 , weight(1.5)|difficulty(0)|spd_rtng(100) | weapon_length(102)|swing_damage(18 , cut) | thrust_damage(15 ,  pierce),imodbits_sword ],\n  [\"tutorial_axe\", \"Axe\", [(\"iron_ax\",0)], itp_type_two_handed_wpn| itp_two_handed|itp_primary|itp_bonus_against_shield|itp_wooden_parry, itc_nodachi|itcf_carry_axe_back, 0 , weight(4)|difficulty(0)|spd_rtng(91) | weapon_length(108)|swing_damage(19 , cut) | thrust_damage(0 ,  pierce),imodbits_axe ],\n  [\"tutorial_spear\", \"Spear\", [(\"spear\",0)], itp_type_polearm| itp_primary|itp_penalty_with_shield|itp_wooden_parry, itc_spear, 0 , weight(4.5)|difficulty(0)|spd_rtng(80) | weapon_length(158)|swing_damage(0 , cut) | thrust_damage(19 ,  pierce),imodbits_polearm ],\n  [\"tutorial_club\", \"Club\", [(\"club\",0)], itp_type_one_handed_wpn| itp_primary|itp_wooden_parry|itp_wooden_attack, itc_scimitar, 0 , weight(2.5)|difficulty(0)|spd_rtng(95) | weapon_length(95)|swing_damage(11 , blunt) | thrust_damage(0 ,  pierce),imodbits_none ],\n  [\"tutorial_battle_axe\", \"Battle Axe\", [(\"battle_ax\",0)], itp_type_two_handed_wpn| itp_two_handed|itp_primary|itp_bonus_against_shield|itp_wooden_parry, itc_nodachi|itcf_carry_axe_back, 0 , weight(5)|difficulty(0)|spd_rtng(88) | weapon_length(108)|swing_damage(27 , cut) | thrust_damage(0 ,  pierce),imodbits_axe ],\n  [\"tutorial_arrows\",\"Arrows\", [(\"arrow\",0),(\"flying_missile\",ixmesh_flying_ammo),(\"quiver\", ixmesh_carry)], itp_type_arrows, itcf_carry_quiver_back, 0,weight(3)|abundance(160)|weapon_length(95)|thrust_damage(0,pierce)|max_ammo(20),imodbits_missile],\n  [\"tutorial_bolts\",\"Bolts\", [(\"bolt\",0),(\"flying_missile\",ixmesh_flying_ammo),(\"bolt_bag\", ixmesh_carry),(\"bolt_bag_b\", ixmesh_carry|imodbit.large_bag)], itp_type_bolts, itcf_carry_quiver_right_vertical, 0,weight(2.25)|abundance(90)|weapon_length(63)|thrust_damage(0,pierce)|max_ammo(18),imodbits_missile],\n  [\"tutorial_short_bow\", \"Short Bow\", [(\"short_bow\",0),(\"short_bow_carry\",ixmesh_carry)], itp_type_bow |itp_primary|itp_two_handed ,itcf_shoot_bow|itcf_carry_bow_back, 0 , weight(1)|difficulty(0)|spd_rtng(98) | shoot_speed(49) | thrust_damage(12 ,  pierce  ),imodbits_bow ],\n  [\"tutorial_crossbow\", \"Crossbow\", [(\"crossbow_a\",0)], itp_type_crossbow |itp_primary|itp_two_handed|itp_cant_reload_on_horseback ,itcf_shoot_crossbow|itcf_carry_crossbow_back, 0 , weight(3)|difficulty(0)|spd_rtng(42)|  shoot_speed(68) | thrust_damage(32,pierce)|max_ammo(1),imodbits_crossbow ],\n  [\"tutorial_throwing_daggers\", \"Throwing Daggers\", [(\"throwing_dagger\",0)], itp_type_thrown |itp_primary ,itcf_throw_knife, 0 , weight(3.5)|difficulty(0)|spd_rtng(102) | shoot_speed(25) | thrust_damage(16 ,  cut)|max_ammo(14)|weapon_length(0),imodbits_missile ],\n  [\"tutorial_saddle_horse\", \"Saddle Horse\", [(\"saddle_horse\",0)], itp_type_horse, 0, 0,abundance(90)|body_armor(3)|difficulty(0)|horse_speed(40)|horse_maneuver(38)|horse_charge(8),imodbits_horse_basic],\n  [\"tutorial_shield\", \"Kite Shield\", [(\"shield_kite_a\",0)], itp_type_shield|itp_wooden_parry, itcf_carry_kite_shield,  118 , weight(2.5)|hit_points(480)|body_armor(1)|spd_rtng(82)|weapon_length(150),imodbits_shield ],\n  [\"tutorial_staff_no_attack\",\"Staff\", [(\"wooden_staff\",0)],itp_type_polearm|itp_offset_lance|itp_primary|itp_penalty_with_shield|itp_wooden_parry|itp_wooden_attack,itc_parry_polearm|itcf_carry_sword_back,9, weight(3.5)|spd_rtng(120) | weapon_length(115)|swing_damage(0,blunt) | thrust_damage(0,blunt),imodbits_none],\n  [\"tutorial_staff\",\"Staff\", [(\"wooden_staff\",0)],itp_type_polearm|itp_offset_lance|itp_primary|itp_penalty_with_shield|itp_wooden_parry|itp_wooden_attack,itc_staff|itcf_carry_sword_back,9, weight(3.5)|spd_rtng(120) | weapon_length(115)|swing_damage(16,blunt) | thrust_damage(16,blunt),imodbits_none],",
			"  [\"tutorial_spear\", \"Spear\", [(\"spear\",0)], itp_type_polearm| itp_primary|itp_penalty_with_shield|itp_wooden_parry, itc_spear, 0 , weight(4.5)|difficulty(0)|spd_rtng(80) | weapon_length(158)|swing_damage(0 , cut) | thrust_damage(19 ,  pierce),imodbits_polearm ],",
			"tutorial_spear",
			"sys.path",
			"final_price_for_secondary_input",
			"final_price_for_secondary_output",
			"imodbit_",
			"fac_",
			"display_message",
			"try_for"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"pt_",
			"\"trp_",
			"\"script_",
			"imod.",
			"spt_",
			"pt.",
			"trp.",
			"fac.",
			"pt.",
			"icon.",
			"trp.",
			"fac.",
			"scn.",
			"itm.",
			"fac.",
			"create_mesh_",
			"\"mesh_",
			"mesh.",
			"mesh.load_window",
			"psys.",
			"snd.",
			"imodbit.",
			"fac.",
			" anim.",
			" fac.",
			"[itm.",
			" itm.",
			", itm",
			" itm.",
			" s.",
			" str.",
			"\"fac_",
			"fac.",
			"\"itm_",
			"itm.",
			"//",
			"LCO.lco_",
			"\"FLNCR.flncr_",
			"TPE.tpe_",
			"FLNCR.flncr_",
			"TPE.tpe_",
			"pf.is_static",
			"inject('freelancer_common_start')",
			"imodbit.",
			"fac."
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Source/modmerger.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12954,
						"regions":
						{
						},
						"selection":
						[
							[
								1590,
								1590
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3500.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Source/modmerger_header.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5688,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Source/compile.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18448,
						"regions":
						{
						},
						"selection":
						[
							[
								6045,
								6045
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6054,
										6055
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										6041,
										6042
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2039.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Source/compiler.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 91799,
						"regions":
						{
						},
						"selection":
						[
							[
								34802,
								34815
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										34816,
										34817
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										34815,
										34816
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10117.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Source/modmerger_installer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14848,
						"regions":
						{
						},
						"selection":
						[
							[
								9591,
								9591
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										9593,
										9594
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										9578,
										9579
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4844.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Source/util_common.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3563,
						"regions":
						{
						},
						"selection":
						[
							[
								3202,
								3202
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 938.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Source/util_animations.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1131,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Source/util_presentations.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 868,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Source/util_scripts.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9723,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Source/util_wrappers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24558,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 644.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 253.0
	},
	"pinned_build_system": "",
	"project": "modmergerstudy.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 243.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
